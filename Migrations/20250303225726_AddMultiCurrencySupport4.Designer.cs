// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PosBackend.Models;

#nullable disable

namespace PosBackend.Migrations
{
    [DbContext(typeof(PosDbContext))]
    [Migration("20250303225726_AddMultiCurrencySupport4")]
    partial class AddMultiCurrencySupport4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PosBackend.Models.AddOn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("AddOns");

                    b.HasData(
                        new
                        {
                            Id = 201,
                            Description = "24/7 priority support via chat and email.",
                            Name = "Premium Support",
                            Price = 5.00m
                        },
                        new
                        {
                            Id = 202,
                            Description = "Add your own logo and color scheme to the POS.",
                            Name = "Custom Branding",
                            Price = 7.00m
                        });
                });

            modelBuilder.Entity("PosBackend.Models.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Code");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Code = "USD",
                            ExchangeRate = 1.0m
                        },
                        new
                        {
                            Code = "EUR",
                            ExchangeRate = 0.9m
                        },
                        new
                        {
                            Code = "GBP",
                            ExchangeRate = 0.8m
                        });
                });

            modelBuilder.Entity("PosBackend.Models.CustomPackageSelectedAddOn", b =>
                {
                    b.Property<int>("PricingPackageId")
                        .HasColumnType("integer");

                    b.Property<int>("AddOnId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("PricingPackageId", "AddOnId");

                    b.HasIndex("AddOnId");

                    b.ToTable("CustomPackageSelectedAddOns");
                });

            modelBuilder.Entity("PosBackend.Models.CustomPackageSelectedFeature", b =>
                {
                    b.Property<int>("PricingPackageId")
                        .HasColumnType("integer");

                    b.Property<int>("FeatureId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("PricingPackageId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CustomPackageSelectedFeatures");
                });

            modelBuilder.Entity("PosBackend.Models.CustomPackageUsageBasedPricing", b =>
                {
                    b.Property<int>("PricingPackageId")
                        .HasColumnType("integer");

                    b.Property<int>("UsageBasedPricingId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("PricingPackageId", "UsageBasedPricingId");

                    b.HasIndex("UsageBasedPricingId");

                    b.ToTable("CustomPackageUsageBasedPricing");
                });

            modelBuilder.Entity("PosBackend.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CoreFeatures");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            BasePrice = 10.00m,
                            Description = "Track and manage your inventory in real-time.",
                            IsRequired = true,
                            Name = "Inventory Management"
                        },
                        new
                        {
                            Id = 102,
                            BasePrice = 8.00m,
                            Description = "Generate detailed reports on sales and revenue.",
                            IsRequired = false,
                            Name = "Sales Reporting"
                        },
                        new
                        {
                            Id = 103,
                            BasePrice = 12.00m,
                            Description = "Manage multiple store locations from one dashboard.",
                            IsRequired = false,
                            Name = "Multi-Location Support"
                        });
                });

            modelBuilder.Entity("PosBackend.Models.PricingPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasDefaultValue("USD");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExtraDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MultiCurrencyPrices")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("{}");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("TestPeriodDays")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PricingPackages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Select the essential modules and features for your business.;Ideal for small businesses or those new to POS systems.",
                            ExtraDescription = "This package is perfect for startups and small businesses.",
                            Icon = "MUI:StartIcon",
                            Price = 29.99m,
                            TestPeriodDays = 14,
                            Title = "Starter",
                            Type = "starter"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Expand your business capabilities with advanced modules and features.;Designed for growing businesses looking to enhance their POS system.",
                            ExtraDescription = "Ideal for businesses looking to scale and grow.",
                            Icon = "MUI:TrendingUpIcon",
                            Price = 59.99m,
                            TestPeriodDays = 14,
                            Title = "Growth",
                            Type = "growth"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tailor-made solutions for your unique business needs.;Perfect for businesses requiring customized POS features.",
                            ExtraDescription = "Get a POS system that fits your specific requirements.",
                            Icon = "MUI:BuildIcon",
                            Price = 99.99m,
                            TestPeriodDays = 30,
                            Title = "Custom",
                            Type = "custom"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Comprehensive POS solutions for large enterprises.;Includes all advanced features and premium support.",
                            ExtraDescription = "Ideal for large businesses with extensive POS needs.",
                            Icon = "MUI:BusinessIcon",
                            Price = 199.99m,
                            TestPeriodDays = 30,
                            Title = "Enterprise",
                            Type = "enterprise"
                        },
                        new
                        {
                            Id = 5,
                            Description = "All-inclusive POS package with premium features.;Best for businesses looking for top-tier POS solutions.",
                            ExtraDescription = "Experience the best POS system with all features included.",
                            Icon = "MUI:StarIcon",
                            Price = 299.99m,
                            TestPeriodDays = 30,
                            Title = "Premium",
                            Type = "premium"
                        });
                });

            modelBuilder.Entity("PosBackend.Models.UsageBasedPricing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FeatureId")
                        .HasColumnType("integer");

                    b.Property<int>("MaxValue")
                        .HasColumnType("integer");

                    b.Property<int>("MinValue")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("numeric");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsageBasedPricing");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FeatureId = 101,
                            MaxValue = 100000,
                            MinValue = 1000,
                            Name = "API Calls",
                            PricePerUnit = 0.01m,
                            Unit = "requests"
                        },
                        new
                        {
                            Id = 2,
                            FeatureId = 102,
                            MaxValue = 50,
                            MinValue = 1,
                            Name = "User Licenses",
                            PricePerUnit = 5.00m,
                            Unit = "users"
                        });
                });

            modelBuilder.Entity("PosBackend.Models.CustomPackageSelectedAddOn", b =>
                {
                    b.HasOne("PosBackend.Models.AddOn", "AddOn")
                        .WithMany()
                        .HasForeignKey("AddOnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosBackend.Models.PricingPackage", null)
                        .WithMany("SelectedAddOns")
                        .HasForeignKey("PricingPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddOn");
                });

            modelBuilder.Entity("PosBackend.Models.CustomPackageSelectedFeature", b =>
                {
                    b.HasOne("PosBackend.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosBackend.Models.PricingPackage", null)
                        .WithMany("SelectedFeatures")
                        .HasForeignKey("PricingPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("PosBackend.Models.CustomPackageUsageBasedPricing", b =>
                {
                    b.HasOne("PosBackend.Models.PricingPackage", null)
                        .WithMany("SelectedUsageBasedPricing")
                        .HasForeignKey("PricingPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosBackend.Models.UsageBasedPricing", "UsageBasedPricing")
                        .WithMany()
                        .HasForeignKey("UsageBasedPricingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsageBasedPricing");
                });

            modelBuilder.Entity("PosBackend.Models.PricingPackage", b =>
                {
                    b.Navigation("SelectedAddOns");

                    b.Navigation("SelectedFeatures");

                    b.Navigation("SelectedUsageBasedPricing");
                });
#pragma warning restore 612, 618
        }
    }
}
